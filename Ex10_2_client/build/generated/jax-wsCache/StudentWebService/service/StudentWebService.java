
package service;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "StudentWebService", targetNamespace = "http://services/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StudentWebService {


    /**
     * 
     * @param student
     * @return
     *     returns java.lang.String
     * @throws NotSupportedException_Exception
     * @throws SystemException_Exception
     * @throws HeuristicRollbackException_Exception
     * @throws RollbackException_Exception
     * @throws HeuristicMixedException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "update", targetNamespace = "http://services/", className = "service.Update")
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://services/", className = "service.UpdateResponse")
    @Action(input = "http://services/StudentWebService/updateRequest", output = "http://services/StudentWebService/updateResponse", fault = {
        @FaultAction(className = RollbackException_Exception.class, value = "http://services/StudentWebService/update/Fault/RollbackException"),
        @FaultAction(className = HeuristicMixedException_Exception.class, value = "http://services/StudentWebService/update/Fault/HeuristicMixedException"),
        @FaultAction(className = HeuristicRollbackException_Exception.class, value = "http://services/StudentWebService/update/Fault/HeuristicRollbackException"),
        @FaultAction(className = SystemException_Exception.class, value = "http://services/StudentWebService/update/Fault/SystemException"),
        @FaultAction(className = NotSupportedException_Exception.class, value = "http://services/StudentWebService/update/Fault/NotSupportedException")
    })
    public String update(
        @WebParam(name = "student", targetNamespace = "")
        Student student)
        throws HeuristicMixedException_Exception, HeuristicRollbackException_Exception, NotSupportedException_Exception, RollbackException_Exception, SystemException_Exception
    ;

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "delete", targetNamespace = "http://services/", className = "service.Delete")
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://services/", className = "service.DeleteResponse")
    @Action(input = "http://services/StudentWebService/deleteRequest", output = "http://services/StudentWebService/deleteResponse")
    public String delete(
        @WebParam(name = "id", targetNamespace = "")
        int id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "insert", targetNamespace = "http://services/", className = "service.Insert")
    @ResponseWrapper(localName = "insertResponse", targetNamespace = "http://services/", className = "service.InsertResponse")
    @Action(input = "http://services/StudentWebService/insertRequest", output = "http://services/StudentWebService/insertResponse")
    public String insert(
        @WebParam(name = "id", targetNamespace = "")
        Student id);

    /**
     * 
     * @param id
     * @return
     *     returns service.Student
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStudentById", targetNamespace = "http://services/", className = "service.FindStudentById")
    @ResponseWrapper(localName = "findStudentByIdResponse", targetNamespace = "http://services/", className = "service.FindStudentByIdResponse")
    @Action(input = "http://services/StudentWebService/findStudentByIdRequest", output = "http://services/StudentWebService/findStudentByIdResponse")
    public Student findStudentById(
        @WebParam(name = "id", targetNamespace = "")
        int id);

}
